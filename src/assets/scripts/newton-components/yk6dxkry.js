/*! Built with http://stenciljs.com */
const{h:t}=window.NewtonComponents;var n=function(t,n,i,e){return new(i||(i=Promise))(function(o,s){function c(t){try{a(e.next(t))}catch(t){s(t)}}function h(t){try{a(e.throw(t))}catch(t){s(t)}}function a(t){t.done?o(t.value):new i(function(n){n(t.value)}).then(c,h)}a((e=e.apply(t,n||[])).next())})};class i{constructor(){this.iconsFolder="assets/icons",this.selected=!1,this.inlineSvgs=!1,this.svgData={on:"",off:""},this.iconSet={on:null,off:null}}componentWillLoad(){(this.icon||this.iconOn&&this.iconOff)&&(this.iconSet={on:`${this.iconsFolder}/${this.iconOn||this.icon}.svg`,off:`${this.iconsFolder}/${this.iconOff||this.icon}.svg`},this.genIconPath(),this.inlineSvgs&&this.load())}load(){return n(this,void 0,void 0,function*(){const t=[{type:"on",url:this.iconSet.on}];this.iconSet.on!==this.iconSet.off&&t.push({type:"off",url:this.iconSet.off}),"undefined"!=typeof fetch?Promise.all(t.map(t=>fetch(t.url).then(i=>n(this,void 0,void 0,function*(){return{icon:t.type,body:yield i.text()}})))).then(t=>{t.forEach(t=>{this.svgData[t.icon]=t.body}),this.svgData.off=this.svgData.off||this.svgData.on}).then(t=>this.replaceSvgInline()):console.warn("Fetch implementation was not found, cannot load inline svgs")})}replaceSvgInline(){this.inlineSvgs&&(this.el.querySelector(".helix--icon").innerHTML=this.isOn?this.svgData.on:this.svgData.off)}toggle(){this.isOn=!this.isOn,this.genIconPath(),this.replaceSvgInline()}genIconPath(){this.iconPath=this.isOn?this.iconSet.on:this.iconSet.off}render(){return t("span",{class:"helix--icon"},this.inlineSvgs?"":t("img",{src:"{this.iconPath}"}))}static get is(){return"helix-icon"}static get properties(){return{el:{elementRef:!0},icon:{type:String,attr:"icon"},iconOff:{type:String,attr:"icon-off"},iconOn:{type:String,attr:"icon-on"},iconPath:{state:!0},iconSet:{state:!0},iconsFolder:{type:String,attr:"icons-folder"},inlineSvgs:{type:Boolean,attr:"inline-svgs"},isOn:{state:!0},load:{method:!0},selected:{type:Boolean,attr:"selected"},svgData:{state:!0},toggle:{method:!0}}}static get style(){return""}}export{i as HelixIcon};