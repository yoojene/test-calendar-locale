/*! Built with http://stenciljs.com */
NewtonComponents.loadBundle("t9ctzzs2",["exports"],function(e){var t=window.NewtonComponents.h,n=function(){function e(){this.showTermsAndConditions=!1,this.agreed=!1}return e.prototype.onAgreedDidChange=function(e){this.onAgreedChange.emit(e)},e.prototype.componentWillLoad=function(){this.showTermsAndConditions=!this.hideTermsOnMount},e.prototype.componentDidLoad=function(){this.checkBoxElement=this.element.querySelector(".checkbox"),this.useScrollValidation&&(this.intersectionElement=this.element.querySelector(".intersection-target"),this.addIntersectionObserver())},e.prototype.showTerms=function(){this.showTermsAndConditions=!0},e.prototype.hideTerms=function(){this.showTermsAndConditions=!1},Object.defineProperty(e.prototype,"hasAgreed",{get:function(){return this.agreed},enumerable:!0,configurable:!0}),e.prototype.addIntersectionObserver=function(){var e=this;"IntersectionObserver"in window?(this.io=new IntersectionObserver(function(t){t[0].isIntersecting&&(!0===e.useCheckBoxValidation&&(e.checkBoxElement.checked=!0),e.agreed=!0,e.removeIntersectionObserver())}),this.io.observe(this.intersectionElement)):console.info("IntersectionObserver not supported")},e.prototype.removeIntersectionObserver=function(){this.io&&(this.io.disconnect(),this.io=null)},e.prototype.onCheckboxChange=function(e){this.agreed=e.target.checked},e.prototype.render=function(){var e=this;return t("div",{class:"container"},t("div",{class:"text",hidden:!this.showTermsAndConditions},this.termsText),t("div",{class:"conditions",hidden:!this.useCheckBoxValidation},t("input",{type:"checkbox",class:"checkbox",onChange:function(t){return e.onCheckboxChange(t)}}),t("label",{class:"checkbox--label"},this.hideTermsOnMount?t("a",{onClick:function(){return e.showTerms()}},this.acknowledgmentText):this.acknowledgmentText)),t("div",{class:"intersection-target"}," "))},Object.defineProperty(e,"is",{get:function(){return"newton-text-wall"},enumerable:!0,configurable:!0}),Object.defineProperty(e,"properties",{get:function(){return{acknowledgmentText:{type:String,attr:"acknowledgment-text"},agreed:{state:!0,watchCallbacks:["onAgreedDidChange"]},element:{elementRef:!0},hideTerms:{method:!0},hideTermsOnMount:{type:Boolean,attr:"hide-terms-on-mount"},showTerms:{method:!0},showTermsAndConditions:{state:!0},termsText:{type:String,attr:"terms-text"},useCheckBoxValidation:{type:Boolean,attr:"use-check-box-validation"},useScrollValidation:{type:Boolean,attr:"use-scroll-validation"}}},enumerable:!0,configurable:!0}),Object.defineProperty(e,"events",{get:function(){return[{name:"onAgreedChange",method:"onAgreedChange",bubbles:!0,cancelable:!0,composed:!0}]},enumerable:!0,configurable:!0}),Object.defineProperty(e,"style",{get:function(){return"newton-text-wall .conditions{text-align:center}"},enumerable:!0,configurable:!0}),e}();e.NewtonTextWall=n,Object.defineProperty(e,"__esModule",{value:!0})});